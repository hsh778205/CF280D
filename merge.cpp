/*

IL void upd(int p)
{
	#define ls (p<<1)
	#define rs (p<<1|1)
	//base
	sum(p)=sum(ls)+sum(rs);
	//lmax
	if(lmax(ls)>sum(ls)+lmax(rs))
	{
		lmax(p)=lmax(ls);
		lmaxr(p)=lmaxr(ls);
	}
	else
	{
		lmax(p)=sum(ls)+lmax(rs);
		lmaxr(p)=lmax(rs);
	}
	//rmax
	if(rmax(rs)>sum(rs)+rmax(ls))
	{
		rmax(p)=rmax(rs);
		rmaxl(p)=rmaxl(rs);
	}
	else
	{
		rmax(p)=sum(rs)+rmax(ls);
		rmaxl(p)=rmaxl(ls);
	}
	//lmin
	if(lmin(ls)<sum(ls)+lmax(rs))
	{
		lmin(p)=lmin(ls);
		lminr(p)=lminr(ls); 
	}
	else
	{
		lmin(p)=sum(ls)+lmin(rs);
		lminr(p)=lminr(rs);
	}
	//rmin
	if(rmin(rs)<sum(rs)+rmin(ls))
	{
		rmin(p)=rmin(rs);
		rminl(p)=rminl(rs);
	}
	else
	{
		rmin(p)=sum(rs)+rmin(ls);
		rminl(p)=rminl(ls);
	}
	//zmax
	if(zmax(ls)<zmax(rs))
	{
		if(zmax(rs)<rmax(ls)+lmax(rs))
		{
			zmax(p)=rmax(ls)+lmax(rs);
			zmaxl(p)=rmaxl(ls);
			zmaxr(p)=lmaxr(rs);
		}
		else
		{
			zmax(p)=zmax(rs);
			zmaxl(p)=zmaxl(rs);
			zmaxr(p)=zmaxr(rs);
		}
	}
	else
	{
		if(zmax(ls)<rmax(ls)+lmax(rs))
		{
			zmax(p)=rmax(ls)+lmax(rs);
			zmaxl(p)=rmaxl(ls);
			zmaxr(p)=lmaxr(rs);
		}
		else
		{
			zmax(p)=zmax(ls);
			zmaxl(p)=zmaxl(ls);
			zmaxr(p)=zmaxr(ls);
		}
	}
	//zmin
	if(zmin(ls)>zmin(rs))
	{
		if(zmin(rs)>rmin(ls)+lmin(rs))
		{
			zmin(p)=rmin(ls)+lmin(rs);
			zminl(p)=rminl(ls);
			zminr(p)=lminr(rs);
		}
		else
		{
			zmin(p)=zmin(rs);
			zmaxl(p)=zminl(rs);
			zmaxr(p)=zmaxr(rs);
		}
	}
	else
	{
		if(zmin(ls)>rmin(ls)+lmin(rs))
		{
			zmin(p)=rmin(ls)+lmin(rs);
			zminl(p)=rminl(ls);
			zminr(p)=lminr(rs);
		}
		else
		{
			zmin(p)=zmin(ls);
			zminl(p)=zminl(ls);
			zminr(p)=zminr(ls);
		}
	}
}
*/

IL void merge(node& p,node ls,node rs)
{
	//base
	p.sum=ls.sum+rs.sum;
	//lmax
	if(ls.lmax>ls.sum+rs.lmax)
	{
		p.lmax=ls.lmax;
		p.lmax=ls.lmaxr;
	}
	else
	{
		p.lmax=ls.sum+rs.lmax;
		p.lmax=rs.sum;
	}
	//rmax
	if(rs.rmax>rs.sum+ls.rmax)
	{
		p.rmax=rs.rmax;
		p.rmaxl=rs.rmaxl;
	}
	else
	{
		p.rmax=rs.sum+ls.rmax;
		p.rmaxl=ls.rmaxl;
	}
	//lmin
	if(ls.lmin<ls.sum+rs.lmin)
	{
		p.lmin=ls.lmin;
		p.lminr=ls.lminr;
	}
	else
	{
		p.lmin=ls.sum+rs.lmin;
		p.lminr=rs.lminr;
	}
	//rmin
	if(rs.rmin<rs.sum+ls.rmin)
	{
		p.rmin=rs.rmin;
		p.rminl=rs.rminl;
	}
	else
	{
		p.rmin=rs.sum+ls.rmin;
		p.rminl=ls.rminl;
	}
	//zmax
	if(ls.zmax<rs.zmax)
	{
		if(rs.zmax<ls.rmax+rs.lmax)
		{
			p.zmax=ls.rmax+rs.lmax;
			p.zmaxl=ls.rmaxl;
			p.zmaxr=rs.lmaxr;
		}
		else
		{
			p.zmax=rs.zmax;
			p.zmaxl=rs.zmaxl;
			p.zmaxr=rs.zmaxr;
		}
	}
	else
	{
		if(ls.zmax<ls.rmax+rs.lmax)
		{
			p.zmax=ls.rmax+rs.lmax;
			p.zmaxl=ls.rmaxl;
			p.zmaxr=rs.lmaxr;
		}
		else
		{
			p.zmax=ls.zmax;
			p.zmaxl=ls.zmaxl;
			p.zmaxr=ls.zmaxr;
		}
	}
	//zmin
	if(ls.zmin>rs.zmin)
	{
		if(rs.zmin>ls.rmin+rs.lmin)
		{
			p.zmin=ls.rmin+rs.lmin;
			p.zminl=ls.zminl;
			p.zminr=rs.zminr;
		}
		else
		{
			p.zmin=rs.zmin;
			p.zminl=rs.zminl;
			p.zminr=rs.zminr;
		}
	}
	else
	{
		if(ls.zmin>ls.rmin+rs.lmin)
		{
			p.zmin=ls.rmin+rs.lmin;
			p.zminl=ls.zminl;
			p.zminr=rs.zminr;
		}
		else
		{
			p.zmin=ls.zmin;
			p.zminl=ls.zminl;
			p.zminr=ls.zminr;
		}
	}
}